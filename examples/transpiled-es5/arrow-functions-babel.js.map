{"version":3,"sources":["../es6/arrow-functions.js"],"names":[],"mappings":"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","file":"arrow-functions-babel.js","sourcesContent":["// create wrapper arrow function expression of console.log\nvar log = message => console.log(message);\n\nlog('Testing out arrow functions!');\n\n// instead of specifying a traditional anonymous function \n// expression to map we can use an arrow function\nlog([1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(value => value * value));\n\n// arrow functions are function expressions and can be\n// assigned to variables\nvar descendingSortFunc = (a, b) => b - a,\n\tvalues = [2, 7, 5, 6],\n\tsortedValues = values.sort(descendingSortFunc);\n\nlog(values);\nlog(sortedValues);\n\n// SYNTAX GOTCHA: objects my be wrapped in parenthesis\n\n// returns an array of undefined values because the\n// {} is interpreted as an empty code block that returns\n// nothing\nlog([4, 6, 2].map(x => {}));\n\n// also returns an array of undefined values because the\n// {foo: x} is interpreted as a code block with the label\n// foo: that has an expression x that is NOT returned\nlog([4, 5, 1].map(x => {foo: x}));\n\n// successfully returns an array of empty objects\nlog([4, 5, 1].map(x => ({})));\n\n// successfully returns an object with \"foo\" as key\n// and number as value\nlog([4, 5, 1].map(x => ({foo: x})));\n\n// Immediately-invoked arrow functions work too!\n// Just be sure to put the parenthesis around the\n// arrow function expression and not around the whole thing\n(message => {\n\tfor (var charNo = 0; charNo < message.length; charNo++) {\n\t\tlog(message.charAt(charNo));\n\t}\n}) ('hello');\n\n// Arrow functions use lexical scoping for *this*, so it\n// can be referenced like you would expect within anonymous\n// functions\nvar car = {\n\tspeed: 0,\n\taccelerate: function() {\n\t\tthis.accelerator = setInterval(\n\t\t\t() => {\n\t\t\t\t// *this* is the same as it is outside\n\t\t\t\t// of the arrow function!\n\t\t\t\tthis.speed++;\n\t\t\t\tlog(this.speed);\n\t\t\t},\n\t\t\t100\n\t\t);\n\t},\n\tcruise: function() {\n\t\tclearInterval(this.accelerator);\n\t\tlog('cruising at ' + this.speed + ' mph');\n\t}\n};\n\ncar.accelerate();\n\nsetTimeout(\n\t() => car.cruise(),\n\t5000\n);\n\n// Arrow functions are identified as functions\nlog(typeof function() { }); // 'function'\nlog(typeof (() => {})); // 'function'\nlog(function() { } instanceof Function); // true\nlog((() => {}) instanceof Function); // true\n\n\nfunction generateArrowFunctionReturningLexicalArguments() {\n\t// returns an arrow function expression\n\t// which itself returns the arguments used\n\t// when generating the arrow function\n    return () => arguments;\n}\n\nvar arrowFunction = generateArrowFunctionReturningLexicalArguments(5, 'foo', [5,4,3]);\n\n// log arguments object with\n// 5, 'foo', and [5,4,3]\nlog(arrowFunction());\n\n"]}