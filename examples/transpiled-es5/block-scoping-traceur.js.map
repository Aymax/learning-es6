{"version":3,"sources":["../es6/block-scoping.js"],"names":[],"mappings":"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","file":"/Users/benmvp/github/benmvp/learning-es6/examples/transpiled-es5/block-scoping-traceur.js","sourcesContent":["(function() {\n\t'use strict';\n\n\tfunction simpleExample(value) {\n\t\tif (value) {\n\t\t\tvar varValue = value;\n\t\t\tlet letValue = value;\n\n\t\t\tconsole.log('inside block', varValue, letValue);\n\t\t}\n\n\t\tconsole.log('outside block');\n\n\t\t// varValue is available even though it was defined\n\t\t// in if-block because it was \"hoisted\" to function scope\n\t\tconsole.log(varValue);\n\n\t\ttry {\n\t\t\t// letValue is a ReferenceError because it\n\t\t\t// was defined w/in if-block\n\t\t\tconsole.log(letValue);\n\t\t}\n\t\tcatch (e) {\n\t\t\t// e is a ReferenceError\n\t\t\tconsole.log('letValue not accessible', e);\n\t\t}\n\t}\n\n\tfunction varExample() {\n\t\tvar myVar = 7;\n\n\t\tconsole.log('myVar after declaration', myVar);\n\n\t\t// even though laterVar is defined later on in the function\n\t\t// it is \"hoisted\" to the beginning of the function &\n\t\t// initialized to undefined. In most C-style languages this would\n\t\t// be an error.\n\t\tconsole.log('laterVar before declaration', laterVar);\n\n\t\tlaterVar = 10;\n\n\t\t// image some legitimate conditional\n\t\tif (myVar < 20) {\n\t\t\t// accidental redefintion of myVar results\n\t\t\t// in outer defined myVar being reassigned\n\t\t\t// to 'foo'\n\t\t\tvar myVar = 'foo';\n\t\t\tvar innerVar = true;\n\n\t\t\tconsole.log('myVar inside block', myVar);\n\t\t}\n\n\t\t// since this declaration was \"hoisted\", it's as if it's no\n\t\t// longer here but at the top of the function\n\t\tvar laterVar;\n\n\t\t// looking at the code laterVar *should* be undefined,\n\t\t// but it has the value 10 from earlier\n\t\tconsole.log('laterVar after declaration', laterVar);\n\n\t\t// we would expect myVar to still be 7\n\t\t// but it was redefined and overwritten\n\t\t// w/in the conditional\n\t\tconsole.log('myVar outside block', myVar === 7);\n\n\t\t// we would expect innerVar to no longer be accessible\n\t\t// since it was defined w/in the if-block, but it was\n\t\t// \"hoisted\" as well\n\t\tconsole.log('innerVar outside block', innerVar);\n\t}\n\n\tfunction letExample(value) {\n\t\tif (value) {\n\t\t\tlet letValue = value;\n\n\t\t\tconsole.log('inside block', letValue);\n\n\t\t\t// redeclaration of letValue would be a TypeError\n\t\t\t// let letValue = 'foo';\n\t\t}\n\n\t\ttry {\n\t\t\t// Accessing letValue is a ReferenceError because it\n\t\t\t// was defined w/in if-block\n\t\t\tconsole.log(letValue);\n\n\t\t\t// if we get here, it means that the JS engine didn't\n\t\t\t// throw an exception, which means that the engine\n\t\t\t// (or transpiled code) did not faithfully reproduce\n\t\t\t// how let should work\n\t\t\tconsole.log('let not faithfully handled');\n\t\t}\n\t\tcatch (e) {\n\t\t\t// e is a ReferenceError\n\t\t\tconsole.log('letValue not accessible', e);\n\t\t}\n\t}\n\n\tfunction letShadowExample() {\n\t\tlet x = 15;\n\n\t\tif (true) {\n\t\t\t// this x \"shadows\" the x defined in the outer scope.\n\t\t\t// this new x just exists within the scope of the\n\t\t\t// if-block\n\t\t\tlet x = 21;\n\n\t\t\t// x should be 21\n\t\t\tconsole.log('x inner block', x);\n\t\t}\n\n\t\t// x should be 15\n\t\tconsole.log('x outer block', x);\n\t}\n\n\tfunction constExample() {\n\t\tconst NAME_KEY = 'name';\n\t\tconst UNFROZEN_OBJ_CONST = {key: 'adam', val: 'eve'};\n\t\tconst FROZEN_OBJ_CONST = Object.freeze({key: 'jesus', val: 'paul'});\n\n\t\t// All const declerations must be initialized.\n\t\t// It's a SyntaxError otherwise\n\t\t// const VALUE_KEY;\n\n\t\t// Const variables are read-only, so trying to\n\t\t// reassign is a SyntaxError too\n\t\t// NAME_KEY = 'key';\n\n\t\t// GOTCHA: even though the object is const, you can still\n\t\t// change properties of it. It's the variable\n\t\t// that cannot be reassigned\n\t\tUNFROZEN_OBJ_CONST.key = 'moses';\n\n\t\t// by freezing the object, using ES5 Object.freeze\n\t\t// its properties cannot be changed.\n\t\t// in strict mode this a TypeError. In non-strict\n\t\t// mode the value silently doesn't change\n\t\t// FROZEN_OBJ_CONST.val = 'peter';\n\n\t\tconsole.log('const value', NAME_KEY);\n\t\tconsole.log('unfrozen object', UNFROZEN_OBJ_CONST);\n\t\tconsole.log('frozen object', FROZEN_OBJ_CONST);\n\t}\n\n\n\tsimpleExample(2);\n\tvarExample();\n\tletExample(2);\n\tletShadowExample();\n\tconstExample();\n}) ();\n"]}